{"version":3,"sources":["Card.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","user","avatar","alt","first_name","last_name","email","App","arrow","useState","page","setPage","users","setUsers","getUsers","a","fetch","response","json","result","data","useEffect","onClick","map","index","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAiBeA,EAfF,SAACC,GAEV,OAEQ,sBAAKC,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SAA4B,qBAAKC,IAAKF,EAAMG,KAAKC,OAAQC,IAAI,GAAGJ,UAAU,UAC1E,+BAAKD,EAAMG,KAAKG,WAAhB,IAA6B,IAA7B,IAAmCN,EAAMG,KAAKI,aAC9C,4BAAIP,EAAMG,KAAKK,YCwDhBC,MA3Df,WAEE,IAKIC,EALJ,EAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAMEL,EADQ,IAAPE,EAOH,IAAMI,EAAQ,uCAAG,gCAAAC,EAAA,sEACSC,MAAM,oCAAD,OAAqCN,IADnD,cACTO,EADS,gBAGMA,EAASC,OAHf,OAGTC,EAHS,OAITC,EAAOD,EAAOC,KACpBP,EAASO,GALM,2CAAH,qDAcd,OALAC,qBAAU,WACRP,MAEA,CAACN,EAAMI,IAGP,gCACE,+CACA,wBAEU,IAARJ,EAAa,mBAAGT,UAAU,qCAAqCuB,QAAW,kBAAIX,EAAQ,MAAU,mBAAGZ,UAAU,uCAAuCuB,QAAW,kBAAIX,EAAQ,MAS7K,yBAASZ,UAAU,YAAnB,SAGEa,EAAMW,KAAI,SAACtB,EAAKuB,GAEd,OAAO,cAAC,EAAD,CAAMvB,KAAQA,GAAaA,EAAKwB,aC1ClCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e1aef9d1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = (props) => {\r\n   \r\n    return (\r\n      \r\n            <div className=\"card\">\r\n                <div className=\"card-image\"><img src={props.user.avatar} alt=\"\" className=\"pic\" /></div>\r\n                <h3>{props.user.first_name} {\" \"} {props.user.last_name}</h3>\r\n                <p>{props.user.email}</p>\r\n            </div>\r\n           \r\n\r\n       \r\n    )\r\n}\r\n\r\nexport default Card\r\n","import './App.css';\nimport Card from './Card';\nimport React, {useEffect}from 'react';\nimport { useState } from 'react';\n\n\nfunction App() {\n  \n  const [page, setPage] = useState(1);\n  const [users, setUsers] = useState([]);\n\n  // boolean variable to display next and back...\n\n  var arrow;\n  if(page===1){\n    arrow = false;\n  }\n  else{\n    arrow = true;\n  }\n  \n  const getUsers = async()=>{\n    const response =  await fetch(`https://reqres.in/api/users?page=${page}`);\n   \n    const result = await response.json();\n    const data = result.data;\n    setUsers(data);\n   \n  }\n\n  useEffect(() => {\n    getUsers();\n    \n  },[arrow,users]);\n  \n  return (\n    <div>\n      <h2>List of users</h2>\n      <br/>\n      {\n        arrow===true?<i className=\"fas fa-angle-double-left leftarrow\" onClick = {()=>setPage(1)}></i>: <i className=\"fas fa-angle-double-right rightarrow\" onClick = {()=>setPage(2)}></i>\n        \n      \n      }\n      \n     \n    \n     \n     \n      <section className=\"container\">\n     \n      {\n        users.map((user,index)=>{\n          \n          return <Card user = {user} key = {user.id}/>\n        })\n      }\n       \n      </section>\n     \n      </div>     \n   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}